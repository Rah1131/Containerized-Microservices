trigger:
- main  # Triggers the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Using the ubuntu-latest hosted agent

variables:
  ACR_NAME: 'project3acr'  # Your ACR name without .azurecr.io
  IMAGE_TAG: 'latest'  # Tag for your Docker images

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ServiceConnection'  # The Azure DevOps service connection name
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Logging in to Azure Container Registry using az acr login"
      az acr login --name $(ACR_NAME)
  displayName: 'Azure CLI ACR Login'

- task: Docker@2
  inputs:
    containerRegistry: 'ServiceConnectionD'  # Docker service connection for build and push
    repository: 'financial-app/account-service'
    command: 'buildAndPush'
    Dockerfile: 'account-service/Dockerfile'
    tags: $(IMAGE_TAG)

- task: Docker@2
  inputs:
    containerRegistry: 'ServiceConnectionD'
    repository: 'financial-app/notification-service'
    command: 'buildAndPush'
    Dockerfile: 'notification-service/Dockerfile'
    tags: $(IMAGE_TAG)

- task: Docker@2
  inputs:
    containerRegistry: 'ServiceConnectionD'
    repository: 'financial-app/transaction-service'
    command: 'buildAndPush'
    Dockerfile: 'transaction-service/Dockerfile'
    tags: $(IMAGE_TAG)

- task: Docker@2
  inputs:
    containerRegistry: 'ServiceConnectionD'
    repository: 'financial-app/user-service'
    command: 'buildAndPush'
    Dockerfile: 'user-service/Dockerfile'
    tags: $(IMAGE_TAG)

# Optional step to verify ACR access
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ServiceConnection'  # The Azure DevOps service connection name
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Verifying ACR access by pulling a Docker image"
      docker pull project3acr.azurecr.io/financial-app/account-service:$(IMAGE_TAG)
  displayName: 'Verify ACR Access'
